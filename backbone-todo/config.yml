
# scripts: These javascript files will be packaged and linked
# in order before any other .js files. File paths should be 
# specified relative to the project root. They should not be 
# compressed. 

# scripts:
# - scripts/lib/jquery-min.js
# - scripts/lib/underscore.js
# - scripts/lib/backbone.js


# add_remaining_scripts: (Yes or No) If Yes, all .js files in 
# the project will be packaged and linked to the main html 
# file. Files not included in the 'scripts' list will be 
# loaded in arbitrary order.
#
# If No, only the files listed in the scripts list will 
# be packaged and linked. Regardless, all script files will 
# be uploaded. You would only set 'add_remaining_scripts' to
# No if you were using a separate asset management library,
# like require.js 

add_remaining_scripts: No


# styles: These stylesheets will be packaged and linked
# in order before any other .css files, similar to scripts.

# styles:
# - styles/bootstrap.css
# - styles/bootstrap-responsive.css


# add_remaining_styles: (Yes or No) If Yes, all remaining 
# .css files in the project will be packaged and linked 
# into the app. If No, only the files listed in the 'styles' 
# list will be linked.

add_remaining_styles: No


# autoroute: the automatic routing feature is useful for single-page 
# websites that implement their own javascript routing. If autoroute
# is set to 'yes', all requests to URLs that don't match a file or API 
# endpoint will be routed to the index.html file. Default is 'no'.

autoroute: yes

# packages: define sets of additional libraries or functionality that
# can be downloaded during app installation. Top-level key defines 
# package name. Inside package, each key is a folder name, and each 
# value is a github repository or gist. Github repos may specify a tag 
# or branch via a tree url.

packages:
  include:
    admin: github.com/backlift/backlift-admin
    public/vendor: gist.github.com/backliftapp/5606343 # backlift-reloader.js

# require: which of the packages must be installed during 

require:
- include