# -------------------------------------------------------------------
# Backlift config.yml file. This file can be used to customize how 
# your application is packaged when you run backlift push.
# -------------------------------------------------------------------

# compile: Backlift will select an appropriate compiler for each file 
# that matches one of the patterns below. The file types that backlift 
# recognizes are:
#   *.jst        -> underscore templates (outputs .js files)
#   *.handlebars -> handlebars templates (outputs .js files)
#   *.less       -> lessc css compiler (outputs .css files)
#   *.coffee     -> coffeescript compiler (outputs .js files)
#
# Uncomment this block to customize which files will be compiled:

# compile:
# - public/**/*.jst
# - public/**/*.handlebars
# - public/**/bootstrap*.less
# - public/**/*.coffee


# scripts: These javascript files will be packaged and linked in 
# order. File paths should be specified relative to the project root.
# They should not be compressed. The * will match any string and **
# will match any folder.

scripts:
- public/libraries/scripts/jquery-1.7.2.js
- public/libraries/scripts/jquery.cookie-1.1.js
- public/libraries/scripts/underscore-1.3.3.js
- public/libraries/scripts/backbone-0.9.2.js
- public/libraries/scripts/bootstrap-2.0.4.js
- public/libraries/scripts/date-1.0.js
- public/libraries/scripts/handlebars.runtime-1.0.6.js
- public/libraries/scripts/backlift-pusher-helpers.js
- public/libraries/scripts/backlift-backbone-helpers.js
- public/setup.js
- public/**/*.js


# styles: These stylesheets will be packaged and linked in order, 
# similar to scripts.

styles:
- public/libraries/styles/bootstrap-2.0.4.css
- public/**/*.css


# optimize: The optimize flag controls whether or not backlift 
# concatenates and minifies .js and .css files. The optimizer is slow
# and produces obfuscated code that cannot be easily debugged. For 
# these reasons, optimization should be disabled during development

optimize: no


# collections: When a document is saved to the server using one of the
# persistence URLs, the data will first be checked against the rules
# defined here. See the persistence documentation in the backlift docs
# at http://backlift.github.com/docs/validation.html#validation

collections:
  users:
    _public_permissions: { default: '', readonly: yes }
    _id: { type: 'auto:current_user', readonly: yes }
